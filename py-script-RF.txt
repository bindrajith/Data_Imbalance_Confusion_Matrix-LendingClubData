import pandas as pd
import csv
import numpy as np

data_loans = pd.read_excel('C:/Users/www/Desktop/PMNDA/bal_ohe_xl.xlsx', dtype=object)

              
#data_loans.replace(recode_vals, inplace=True)
data_loans.head(10)

#data split
#X = data_loans
X = data_loans.drop('Target',1)
y = data_loans.Target
y=y.astype('int')
data_loans.shape[0]
X.shape[0]

features = X.columns[0:93]
#target = y.columns[0]

#from sklearn.cross_validation import train_test_split
from sklearn.model_selection import train_test_split

np.random.seed([3,1415])
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)
X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.25, random_state=1)


fea = X.shape[0]
tgt = y.shape[0]
trn = X_train.shape[0]
tst = X_test.shape[0]
val = X_val.shape[0]
print(fea, tgt, trn, tst, val)

valp = val/fea
tstp = tst/fea
trnp = trn/fea
print(trnp, tstp, valp)

from sklearn import model_selection
from sklearn.ensemble import RandomForestClassifier
#model
rfc = RandomForestClassifier()
model = rfc.fit(X_train, y_train)
predict = rfc.predict(X_test)


from sklearn.model_selection import cross_val_score
from sklearn.metrics import classification_report, confusion_matrix

#cv
rfc_cv_score = cross_val_score(rfc, X_val, y_val, cv=5, scoring='roc_auc')

print("=== Confusion Matrix ===")
print(confusion_matrix(y_test, predict))
print('\n')
print("=== Classification Report ===")
print(classification_report(y_test, predict))
print('\n')
print("=== All AUC Scores ===")
print(rfc_cv_score)
print('\n')
print("=== Mean AUC Score ===")
print("Mean AUC Score - Random Forest: ", rfc_cv_score.mean())
